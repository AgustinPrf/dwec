{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Unidad_1/","text":"1. DESARROLLO WEB La web fue inicialmente concebida y creada por Tim Berners-Lee, un especialista del laboratorio europeo de part\u00edculas (CERN) en 1989. En sus mismas palabras, hab\u00eda una \"necesidad de una herramienta colaborativa que soportara el conocimiento cient\u00edfico\" en un contexto internacional. \u00c9l y su compa\u00f1ero Robert Cailliau crearon un prototipo web, lo mostraron a la comunidad para sus pruebas y comentarios. Dicho prototipo estaba basado en el concepto de hipertexto ( Texto que cuando pulsamos en \u00e9l nos conduce a otro texto, objeto, sonido, video, secci\u00f3n o documento relacionado ). Como resultado se crearon unos protocolos ( cuando pulsamos en \u00e9l nos conduce a otro texto, objeto, sonido, v\u00eddeo, secci\u00f3n o documento relacionado ) y especificaciones que han sido adoptados universalmente e incorporados a Internet, gracias a aportaciones posteriores como el desarrollo por la NCSA de la popular interfaz MOSAIC. Todos los prototipos y desarrollos posteriores crecieron bajo la gu\u00eda del consorcio W3C, que es una organizaci\u00f3n con base en el MIT de Massachusetts, que se responsabiliza de desarrollar y mantener los est\u00e1ndares web. 2. ESTRUCTURA CLIENTE SERVIDOR Hoy en d\u00eda los sitios web siguen un modelo basado en la programaci\u00f3n cliente-servidor con tres elementos comunes: El lado del servidor [ server-side ] Incluye el hardware y software del servidor Web as\u00ed como diferentes elementos de programaci\u00f3n y tecnolog\u00edas incrustadas. Las tecnolog\u00edas pueden abarcar un rango amplio desde programas CGI escritos en PERL hasta aplicaciones multihilo ( Tambi\u00e9n denominado multiproceso hace referencia a la posibilidad de ejecutar diferentes trozos de c\u00f3digo de una misma aplicaci\u00f3n de forma simult\u00e1nea ) basadas en Java, incluyendo tecnolog\u00edas de servidor de bases de datos que soporten m\u00faltiples sitios web. El lado del cliente [ client-side ] Este elemento hace referencia a los navegadores web y est\u00e1 soportado por tecnolog\u00edas como HTML, CSS y lenguajes como JavaScript y controles ActiveX, los cuales se utilizan para crear la presentaci\u00f3n de la p\u00e1gina o proporcionar caracter\u00edsticas interactivas. Es justamente aqu\u00ed d\u00f3nde nos vamos a centrar a lo largo de todo el m\u00f3dulo. La red [ Network ] Describe los diferentes elementos de conectividad ( Capacidad que tiene un dispositivo para poder conectarse a otros. Aqu\u00ed se detallan los diferentes protocolos y material utilizado para poder realizar dicha conexi\u00f3n ) utilizados para mostrar el sitio web al usuario. 3. LENGUAJES DE PROGRAMACI\u00d3N EN CLIENTES WEB Cuando hablamos de tecnolog\u00edas empleadas en lenguajes de programaci\u00f3n web podemos citar dos grupos b\u00e1sicos: client-side y server-side. Las tecnolog\u00edas client-side son aquellas que son ejecutadas en el cliente, generalmente en el contexto del navegador web. Cuando los programas o tecnolog\u00edas son ejecutadas o interpretadas por el servidor estamos hablando de programaci\u00f3n server-side. Cada tipo general de programaci\u00f3n tiene su propio lugar y la mezcla es generalmente la mejor soluci\u00f3n. Cuando hablamos de lenguajes de programaci\u00f3n en clientes web, podemos distinguir dos variantes: Lenguajes que nos permiten dar formato y estilo a una p\u00e1gina web HTML, CSS, etc. Lenguajes que nos permite aportar dinamismo a p\u00e1ginas web Lenguajes de scripting. En este m\u00f3dulo nos vamos a centrar principalmente en estos \u00faltimos, los lenguajes de scripting, y en particular en el lenguaje JavaScript que ser\u00e1 el lenguaje que utilizaremos a lo largo de todo este m\u00f3dulo formativo. Lado Cliente [client-side] Lado Servidor [server-side] Aplicaciones de ayuda Programas del API del navegador - Plugins del navegador - Applets de java - Controles Activex Lenguajes de Scripting -Javascript -VBScript Scripts y programas CGI Programas API del servidor - M\u00f3dulos Apache -Extensiones ISAPI y filtros Lenguajes de Scripting -PHP -.NET - ColdFusion Hemos escogido JavaScript porque es el lenguaje de script ( Lenguaje de guiones o lenguaje de \u00f3rdenes que se almacena por lo general en archivos de texto plano y que ser\u00e1 ejecutado por un programa int\u00e9rprete ) m\u00e1s utilizado en la programaci\u00f3n en el lado del cliente, y est\u00e1 soportado mayoritariamente por todas las plataformas ( Sistema operativo utilizado por un determinado dispositivo ). Por lo tanto a partir de ahora todas las referencias que hagamos estar\u00e1n enfocadas hacia JavaScript. A continuaci\u00f3n te mostramos un esquema de las 4 capas del desarrollo web en el lado del cliente , en la que se puede ver que JavaScript se sit\u00faa en la capa superior gestionando el comportamiento de la p\u00e1gina web. Capas del Desarrollo Comportamiento (JavaScript) Presentaci\u00f3n (CSS) Estructura (DOM / Estructura HTML) Contenido (texto , im\u00e1genes , v\u00eddeos, etc) 4. NAVEGADORES Para realizar cualquier desarrollo web, es imprescindible comprobar que el resultado que queremos es el adecuado con la mayor cantidad de navegadores posibles, especialmente aquellos m\u00e1s usados. Adem\u00e1s de procesar etiquetas HTML, los navegadores suelen interpretar lenguajes de script, siendo Javascript uno de los m\u00e1s populares. Definici\u00f3n de navegador Definici\u00f3n: Un navegador o navegador web, o browser (en ingl\u00e9s), es un software que permite el acceso a Internet, interpretando la informaci\u00f3n de distintos tipos de archivos y sitios web para que estos puedan ser visualizados. La funcionalidad b\u00e1sica de un navegador web es permitir la visualizaci\u00f3n de documentos de texto, posiblemente con recursos multimedia incrustados. Adem\u00e1s, permite visitar p\u00e1ginas web y hacer actividades en ella, es decir, podemos enlazar un sitio con otro, imprimir, enviar y recibir correo, entre otras funcionalidades m\u00e1s. Los documentos que se muestran en un navegador pueden estar ubicados en la computadora en donde est\u00e1 el usuario, pero tambi\u00e9n pueden estar en cualquier otro dispositivo que est\u00e9 conectado en la computadora del usuario o a trav\u00e9s de Internet, y que tenga los recursos necesarios para la transmisi\u00f3n de los documentos (un software servidor web). Tales documentos, com\u00fanmente denominados p\u00e1ginas web, poseen hiperv\u00ednculos que enlazan una porci\u00f3n de texto o una imagen a otro documento, normalmente relacionado con el texto o la imagen.El seguimiento de enlaces de una p\u00e1gina a otra, ubicada en cualquier computadora conectada a Internet, se llama navegaci\u00f3n, de donde se origina el nombre navegador. Para acceder a estos recursos, se utiliza un identificador \u00fanico llamado URL (Uniform Resource Locator). El formato general de una URL es : protocolo: //m\u00e1quina/directorio/archivo Aclaraciones Si no se especifica el directorio, toma como directorio el ra\u00edz. Si no se especifica el fichero, toma alguno de los nombres por defecto (\u201cindex.html\u201d, \u201cindex.php\u201d, etc...) Funciones del navegador La comunicaci\u00f3n entre el servidor web y el navegador se realiza mediante el protocolo HTTP, aunque la mayor\u00eda de los navegadores soportan otros protocolos como FTP y HTTPS (una versi\u00f3n cifrada de HTTP basada en Secure Socket Layer o Capa de Conexi\u00f3n Segura (SSL)). La funci\u00f3n principal del navegador es obtener documentos HTML e interpretarlos para mostrarlos en pantalla. En la actualidad, no solamente descargan este tipo de documentos sino que muestran con el documento sus im\u00e1genes, sonidos e incluso v\u00eddeos streaming en diferentes formatos y protocolos. Adem\u00e1s, permiten almacenar la informaci\u00f3n en el disco o crear marcadores (bookmarks) de las p\u00e1ginas m\u00e1s visitadas. Algunos de los navegadores web m\u00e1s populares se incluyen en lo que se denomina una Suite. Estas Suite disponen de varios programas integrados para leer noticias de Usenet y correo electr\u00f3nico mediante los protocolos NNTP, IMAP y POP. Los primeros navegadores web s\u00f3lo soportaban una versi\u00f3n muy simple de HTML. El r\u00e1pido desarrollo de los navegadores web propietarios condujo al desarrollo de dialectos no est\u00e1ndares de HTML y a problemas de interoperabilidad en la web. Los m\u00e1s modernos ( como Google Chrome, Mozilla, Netscape, Opera e Internet Explorer/Microsoft Edg e) soportan los est\u00e1ndares HTML y XHTML (comenzando con HTML 4.01, los cuales \u201cdeber\u00edan\u201d visualizarse de la misma manera en todos ellos). Los est\u00e1ndares web son un conjunto de recomendaciones dadas por el World Wide Web consortium W3C) y otras organizaciones internacionales acerca de c\u00f3mo crear e interpretar documentos basados en la web. Su objetivo es crear una web que trabaje mejor para todos, con sitios accesibles a m\u00e1s personas y que funcionen en cualquier dispositivo de acceso a Internet. Se puede comprobar de manera online si un documento Web cumple el est\u00e1ndar definido por W3C mediante: https://validator.w3.org/ Actualmente la mayor\u00eda de navegadores aceptan p\u00e1ginas no est\u00e1ndar, pero cuanto m\u00e1s est\u00e1ndar se la aplicaci\u00f3n web desarrollada, mayor probabilidad que funcione correctamente en todos los navegadores. \u00a1\u00a1Importante!! Es una pr\u00e1ctica imprescindible el comprobar que cualquier desarrollo Web funcione correctamente en los principales navegadores. 5. PRINCIPALES NAVEGADORES Microsoft Edge - Antiguo Internet Explorer URL Oficial \u2192 https://www.microsoft.com/es-es/windows/microsoft-edge Antiguamente se llamaba Internet Explorer. Microsoft Edge est\u00e1 dise\u00f1ado para ser un navegador web ligero con un motor de renderizado de c\u00f3digo abierto construido en torno a los est\u00e1ndares web. Mozilla Firefox URL Oficial \u2192 https://www.mozilla.org/es-ES/firefox/new/ Mozilla Firefox es un navegador web libre y de c\u00f3digo abierto desarrollado por la Corporaci\u00f3n Mozilla y la Fundaci\u00f3n Mozilla. Usa el motor Gecko para renderizar p\u00e1ginas webs, el cual implementa actuales y futuros est\u00e1ndares web. Posee una versi\u00f3n para desarrolladores: \u201cFirefox Developer Edition\u201d https://www.mozilla.org/en-US/firefox/developer/?utm_source=firebug&utm_medium=lp&utm_campaign=switch&utm_content=landingpage Google Chrome URL Oficial \u2192 https://www.google.com/chrome/ Google Chrome es un navegador web desarrollado por Google y compilado con base en varios componentes e infraestructuras de desarrollo de aplicaciones (frameworks) de c\u00f3digo abierto, como el motor de renderizado Blink (bifurcaci\u00f3n o fork de WebKit). Est\u00e1 disponible gratuitamente bajo condiciones espec\u00edficas del software privativo o cerrado. Safari URL oficial \u2192 http://www.apple.com/es/safari/ Safari es un navegador web de c\u00f3digo cerrado desarrollado por Apple Inc. Est\u00e1 disponible para OS X, iOS (el sistema usado por el iPhone, el iPod touch y iPad) y Windows (sin soporte desde el 2012). Opera URL oficial \u2192 http://www.opera.com/es Opera es un navegador web creado por la empresa noruega Opera Software. Usa el motor de renderizado Blink. Tiene versiones para escritorio, tel\u00e9fonos m\u00f3viles y tabletas. \u00bfQue navegador se recomienda para realizar el curso? Para realizar las actividades del m\u00f3dulo, recomiendo utilizar Mozilla Firefox (aunque es posible usar el que se desee). El motivo de usar este es la gran cantidad de herramientas para depuraci\u00f3n que posee incluso en su versi\u00f3n est\u00e1ndar. Para la mayor\u00eda de acciones con este ser\u00e1 suficiente, pero est\u00e1 disponible una versi\u00f3n que amplia las herramientas de desarrollo llamada \u201cFirefox Developer Edition\u201d. 6. HERRAMIENTAS PARA EL DESARROLLO: CONSOLA WEB Los navegadores incorporan de manera nativa herramientas para facilitar el desarrollo, entra la que destacamos la \u201cConsola Web\u201d. Asimismo, tambi\u00e9n mediante ampliaciones (extensiones, plugins, etc.) se ampl\u00edan caracter\u00edsticas para facilitar el desarrollo y la depuraci\u00f3n de c\u00f3digo. Esta consola incluye varias pesta\u00f1as : Red \u2192 Registro de Peticiones HTTP. CSS \u2192 Registra an\u00e1lisis y errores CSS. JS \u2192 Registra an\u00e1lisis y errores Javascript Seguridad \u2192 Registra advertencias o fallos de seguridad. Registro \u2192 Registra mensajes enviados al objeto \u201cwindow.console\u201d Servidor \u2192 Registrar mensajes recibidos del servidor Web. El resultado de las peticiones HTTP se muestra de color negro, CSS de color azul, JavaScript amarillo y los errores o advertencias de seguridad de color rojo, registro objeto \u201cwindow.console\u201d en gris y Servidor en verde. 7. ENTORNO DE DESARROLLO Existen diversos entornos de desarrollo, desde los m\u00e1s sencillos (Brackets, Notepad++, Sublime, Visual Studio Code, etc...) a interfaces m\u00e1s complejas (Aptana, Eclipse, etc...) En principio pod\u00e9is usar aquel que quer\u00e1is. Visual Studio Code Recomendamos Visual Studio Code. Es software libre y muy potente https://code.visualstudio.com/ Aqu\u00ed algunos manuales libres de uso de Visual Studio Code en castellano: http://www.mclibre.org/consultar/informatica/lecciones/vsc-instalacion.html http://www.mclibre.org/consultar/informatica/lecciones/vsc-personalizacion.html Control de versiones en Visual Studio Code Durante el curso, se utilizar\u00e1n repositorios Git tanto para la entrega de pr\u00e1cticas como para facilitaros el disponer de un repositorio con control de versiones. Utilizaremos una cuenta Git en Github : https://www-github.com Pod\u00e9is instalarlo en: Ubuntu: sudo apt-get update sudo apt-get install git Windows: https://git-for-windows.github.io/ Para facilitar la tarea del uso de Git es recomendable instalar alguna extensi\u00f3n o entorno que os facilite su uso. Para usar Git en Visual Studio Code https://code.visualstudio.com/docs/editor/versioncontrol http://www.mclibre.org/consultar/informatica/lecciones/vsc-git-repositorio.html Aqu\u00ed un ejemplo del uso de Git en Visual Studio Code. https://code.visualstudio.com/docs/introvideos/versioncontrol 8. CONTROL DE VERSIONES: GIT \u2013 GITHUB Git es un software de control de versiones dise\u00f1ado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando \u00e9stas tienen un gran n\u00famero de archivos de c\u00f3digo fuente. Su prop\u00f3sito es llevar registro de los cambios en archivos de computadora y coordinar el trabajo que varias personas realizan sobre archivos compartidos Si est\u00e1s en una distribuci\u00f3n basada en Debian como Ubuntu, puedes usar apt-get: apt-get install git Para instalar git en otros sistemas operativos puedes utilizar como referencia la informaci\u00f3n de la web: https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Instalaci\u00f3n-de-Git * \u00d3rdenes b\u00e1sicas en git Crear un subdirectorio nuevo llamado .git, el cual contiene todos los archivos necesarios del repositorio git init Descargar informaci\u00f3n de una determinada rama, unifica los comando fetch y merge. git pull Comienza a trackear el archivo \u201cnombre_archivo\u201d. git add <nombre_archivo> Confirma los cambios realizados. El \u201cmensaje\u201d generalmente se usa para asociar al commit una breve descripci\u00f3n de los cambios realizados. git commit -am \"<mensaje>\" Commitea los cambios desde el branch local origin al branch \u201cnombre_rama\u201d. git push origin <nombre_rama> Para consultar m\u00e1s comando, puedes visitar la web: https://git-scm.com/docs Github GitHub es una forja (plataforma de desarrollo colaborativo) para alojar proyectos utilizando el sistema de control de versiones Git. Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente de programas de ordenador. El software que opera GitHub fue escrito en Ruby on Rails El 4 de junio de 2018, Microsoft compr\u00f3 GitHub por la cantidad de 7.500 millones de d\u00f3lares, este cambio de propietarios provoc\u00f3 la salida de varios proyecto desde este repositorio debido la posibilidad de acceso a c\u00f3digos fuentes por parte de una compa\u00f1\u00eda que su negocios es el software: http://www.github.com 9. INTEGRACI\u00d3N DE C\u00d3DIGO JAVASCRIPT CON HTML Ahora que ya conoces las herramientas que puedes utilizar para comenzar a programar en JavaScript, vamos a ver la forma de integrar el c\u00f3digo de JavaScript en tu c\u00f3digo HTML. Etiqueta script Los navegadores web te permiten varias opciones de inserci\u00f3n de c\u00f3digo de JavaScript. Podremos insertar c\u00f3digo usando las etiquetas script y empleando un atributo type indicaremos qu\u00e9 tipo de lenguaje de script estamos utilizando. <script type=\u201dtext/javascript\u201d> // El c\u00f3digo javascript vendr\u00e1 aqu\u00ed </script> Fichero externo Otra forma de integrar el c\u00f3digo de JavaScript es incrustar un fichero externo que contenga el c\u00f3digo de JavaScript. \u00c9sta ser\u00eda la forma m\u00e1s recomendable , ya que as\u00ed se consigue una separaci\u00f3n entre el c\u00f3digo y la estructura de la p\u00e1gina web y como ventajas adicionales podr\u00e1s compartir c\u00f3digo entre diferentes p\u00e1ginas, centralizar el c\u00f3digo para la depuraci\u00f3n de errores, tendr\u00e1s mayor claridad en tus desarrollos, m\u00e1s modularidad, seguridad del c\u00f3digo y conseguir\u00e1s que las p\u00e1ginas carguen m\u00e1s r\u00e1pido. La rapidez de carga de las p\u00e1ginas se consigue al tener el c\u00f3digo de JavaScript en un fichero independiente, ya que si m\u00e1s de una p\u00e1gina tiene que acceder a ese fichero lo coger\u00e1 autom\u00e1ticamente de la cach\u00e9 del navegador con lo que se acelerar\u00e1 la carga de la p\u00e1gina. Para ello tendremos que a\u00f1adir a la etiqueta script el atributo src , con el nombre del fichero que contiene el c\u00f3digo de JavaScript. Generalmente los ficheros que contienen texto de JavaScript tendr\u00e1n la extensi\u00f3n .js . <script type=\u201dtext/javascript\u201d src=\u201dtucodigo.js\u201d> </script> En c\u00f3digo html Otra alternativa consiste en incorporar javascript directamente en elementos html. Numerosos autores no recomiendan esta opci\u00f3n, con el principal motivo de que dificulta considerablemente el mantenimiento de aplicaciones. <body> <p onclick=\u201dalert(\u2018un mensaje de prueba\u2019)\u201d>P\u00e1rrafo de texto</p> <body> Etiqueta noscript El lenguaje HTML define la etiqueta noscript para mostrar un mensaje al usuario cuando su navegador no puede ejecutar JavaScript. Esta etiqueta debe incluir en el interior el mensaje a mostrar, adem\u00e1s puede incluir cualquier elemento o etiqueta XHTML. <head> ... </head> <body> <noscript> <p> Bienvenido a Mi Sitio</p> <p> La p\u00e1gina que est\u00e1s viendo requiere para su funcionamiento el uso de JavaScript. Si lo has deshabilitado intencionadamente, por favor vuelve a activarlo </p> <noscript> <body>","title":"Unidad 1"},{"location":"Unidad_1/#1-desarrollo-web","text":"La web fue inicialmente concebida y creada por Tim Berners-Lee, un especialista del laboratorio europeo de part\u00edculas (CERN) en 1989. En sus mismas palabras, hab\u00eda una \"necesidad de una herramienta colaborativa que soportara el conocimiento cient\u00edfico\" en un contexto internacional. \u00c9l y su compa\u00f1ero Robert Cailliau crearon un prototipo web, lo mostraron a la comunidad para sus pruebas y comentarios. Dicho prototipo estaba basado en el concepto de hipertexto ( Texto que cuando pulsamos en \u00e9l nos conduce a otro texto, objeto, sonido, video, secci\u00f3n o documento relacionado ). Como resultado se crearon unos protocolos ( cuando pulsamos en \u00e9l nos conduce a otro texto, objeto, sonido, v\u00eddeo, secci\u00f3n o documento relacionado ) y especificaciones que han sido adoptados universalmente e incorporados a Internet, gracias a aportaciones posteriores como el desarrollo por la NCSA de la popular interfaz MOSAIC. Todos los prototipos y desarrollos posteriores crecieron bajo la gu\u00eda del consorcio W3C, que es una organizaci\u00f3n con base en el MIT de Massachusetts, que se responsabiliza de desarrollar y mantener los est\u00e1ndares web.","title":"1. DESARROLLO WEB"},{"location":"Unidad_1/#2-estructura-cliente-servidor","text":"Hoy en d\u00eda los sitios web siguen un modelo basado en la programaci\u00f3n cliente-servidor con tres elementos comunes: El lado del servidor [ server-side ] Incluye el hardware y software del servidor Web as\u00ed como diferentes elementos de programaci\u00f3n y tecnolog\u00edas incrustadas. Las tecnolog\u00edas pueden abarcar un rango amplio desde programas CGI escritos en PERL hasta aplicaciones multihilo ( Tambi\u00e9n denominado multiproceso hace referencia a la posibilidad de ejecutar diferentes trozos de c\u00f3digo de una misma aplicaci\u00f3n de forma simult\u00e1nea ) basadas en Java, incluyendo tecnolog\u00edas de servidor de bases de datos que soporten m\u00faltiples sitios web. El lado del cliente [ client-side ] Este elemento hace referencia a los navegadores web y est\u00e1 soportado por tecnolog\u00edas como HTML, CSS y lenguajes como JavaScript y controles ActiveX, los cuales se utilizan para crear la presentaci\u00f3n de la p\u00e1gina o proporcionar caracter\u00edsticas interactivas. Es justamente aqu\u00ed d\u00f3nde nos vamos a centrar a lo largo de todo el m\u00f3dulo. La red [ Network ] Describe los diferentes elementos de conectividad ( Capacidad que tiene un dispositivo para poder conectarse a otros. Aqu\u00ed se detallan los diferentes protocolos y material utilizado para poder realizar dicha conexi\u00f3n ) utilizados para mostrar el sitio web al usuario.","title":"2. ESTRUCTURA CLIENTE SERVIDOR"},{"location":"Unidad_1/#3-lenguajes-de-programacion-en-clientes-web","text":"Cuando hablamos de tecnolog\u00edas empleadas en lenguajes de programaci\u00f3n web podemos citar dos grupos b\u00e1sicos: client-side y server-side. Las tecnolog\u00edas client-side son aquellas que son ejecutadas en el cliente, generalmente en el contexto del navegador web. Cuando los programas o tecnolog\u00edas son ejecutadas o interpretadas por el servidor estamos hablando de programaci\u00f3n server-side. Cada tipo general de programaci\u00f3n tiene su propio lugar y la mezcla es generalmente la mejor soluci\u00f3n. Cuando hablamos de lenguajes de programaci\u00f3n en clientes web, podemos distinguir dos variantes: Lenguajes que nos permiten dar formato y estilo a una p\u00e1gina web HTML, CSS, etc. Lenguajes que nos permite aportar dinamismo a p\u00e1ginas web Lenguajes de scripting. En este m\u00f3dulo nos vamos a centrar principalmente en estos \u00faltimos, los lenguajes de scripting, y en particular en el lenguaje JavaScript que ser\u00e1 el lenguaje que utilizaremos a lo largo de todo este m\u00f3dulo formativo. Lado Cliente [client-side] Lado Servidor [server-side] Aplicaciones de ayuda Programas del API del navegador - Plugins del navegador - Applets de java - Controles Activex Lenguajes de Scripting -Javascript -VBScript Scripts y programas CGI Programas API del servidor - M\u00f3dulos Apache -Extensiones ISAPI y filtros Lenguajes de Scripting -PHP -.NET - ColdFusion Hemos escogido JavaScript porque es el lenguaje de script ( Lenguaje de guiones o lenguaje de \u00f3rdenes que se almacena por lo general en archivos de texto plano y que ser\u00e1 ejecutado por un programa int\u00e9rprete ) m\u00e1s utilizado en la programaci\u00f3n en el lado del cliente, y est\u00e1 soportado mayoritariamente por todas las plataformas ( Sistema operativo utilizado por un determinado dispositivo ). Por lo tanto a partir de ahora todas las referencias que hagamos estar\u00e1n enfocadas hacia JavaScript. A continuaci\u00f3n te mostramos un esquema de las 4 capas del desarrollo web en el lado del cliente , en la que se puede ver que JavaScript se sit\u00faa en la capa superior gestionando el comportamiento de la p\u00e1gina web. Capas del Desarrollo Comportamiento (JavaScript) Presentaci\u00f3n (CSS) Estructura (DOM / Estructura HTML) Contenido (texto , im\u00e1genes , v\u00eddeos, etc)","title":"3. LENGUAJES DE PROGRAMACI\u00d3N EN CLIENTES WEB"},{"location":"Unidad_1/#4-navegadores","text":"Para realizar cualquier desarrollo web, es imprescindible comprobar que el resultado que queremos es el adecuado con la mayor cantidad de navegadores posibles, especialmente aquellos m\u00e1s usados. Adem\u00e1s de procesar etiquetas HTML, los navegadores suelen interpretar lenguajes de script, siendo Javascript uno de los m\u00e1s populares.","title":"4. NAVEGADORES"},{"location":"Unidad_1/#definicion-de-navegador","text":"Definici\u00f3n: Un navegador o navegador web, o browser (en ingl\u00e9s), es un software que permite el acceso a Internet, interpretando la informaci\u00f3n de distintos tipos de archivos y sitios web para que estos puedan ser visualizados. La funcionalidad b\u00e1sica de un navegador web es permitir la visualizaci\u00f3n de documentos de texto, posiblemente con recursos multimedia incrustados. Adem\u00e1s, permite visitar p\u00e1ginas web y hacer actividades en ella, es decir, podemos enlazar un sitio con otro, imprimir, enviar y recibir correo, entre otras funcionalidades m\u00e1s. Los documentos que se muestran en un navegador pueden estar ubicados en la computadora en donde est\u00e1 el usuario, pero tambi\u00e9n pueden estar en cualquier otro dispositivo que est\u00e9 conectado en la computadora del usuario o a trav\u00e9s de Internet, y que tenga los recursos necesarios para la transmisi\u00f3n de los documentos (un software servidor web). Tales documentos, com\u00fanmente denominados p\u00e1ginas web, poseen hiperv\u00ednculos que enlazan una porci\u00f3n de texto o una imagen a otro documento, normalmente relacionado con el texto o la imagen.El seguimiento de enlaces de una p\u00e1gina a otra, ubicada en cualquier computadora conectada a Internet, se llama navegaci\u00f3n, de donde se origina el nombre navegador. Para acceder a estos recursos, se utiliza un identificador \u00fanico llamado URL (Uniform Resource Locator). El formato general de una URL es : protocolo: //m\u00e1quina/directorio/archivo Aclaraciones Si no se especifica el directorio, toma como directorio el ra\u00edz. Si no se especifica el fichero, toma alguno de los nombres por defecto (\u201cindex.html\u201d, \u201cindex.php\u201d, etc...)","title":"Definici\u00f3n de navegador"},{"location":"Unidad_1/#funciones-del-navegador","text":"La comunicaci\u00f3n entre el servidor web y el navegador se realiza mediante el protocolo HTTP, aunque la mayor\u00eda de los navegadores soportan otros protocolos como FTP y HTTPS (una versi\u00f3n cifrada de HTTP basada en Secure Socket Layer o Capa de Conexi\u00f3n Segura (SSL)). La funci\u00f3n principal del navegador es obtener documentos HTML e interpretarlos para mostrarlos en pantalla. En la actualidad, no solamente descargan este tipo de documentos sino que muestran con el documento sus im\u00e1genes, sonidos e incluso v\u00eddeos streaming en diferentes formatos y protocolos. Adem\u00e1s, permiten almacenar la informaci\u00f3n en el disco o crear marcadores (bookmarks) de las p\u00e1ginas m\u00e1s visitadas. Algunos de los navegadores web m\u00e1s populares se incluyen en lo que se denomina una Suite. Estas Suite disponen de varios programas integrados para leer noticias de Usenet y correo electr\u00f3nico mediante los protocolos NNTP, IMAP y POP. Los primeros navegadores web s\u00f3lo soportaban una versi\u00f3n muy simple de HTML. El r\u00e1pido desarrollo de los navegadores web propietarios condujo al desarrollo de dialectos no est\u00e1ndares de HTML y a problemas de interoperabilidad en la web. Los m\u00e1s modernos ( como Google Chrome, Mozilla, Netscape, Opera e Internet Explorer/Microsoft Edg e) soportan los est\u00e1ndares HTML y XHTML (comenzando con HTML 4.01, los cuales \u201cdeber\u00edan\u201d visualizarse de la misma manera en todos ellos). Los est\u00e1ndares web son un conjunto de recomendaciones dadas por el World Wide Web consortium W3C) y otras organizaciones internacionales acerca de c\u00f3mo crear e interpretar documentos basados en la web. Su objetivo es crear una web que trabaje mejor para todos, con sitios accesibles a m\u00e1s personas y que funcionen en cualquier dispositivo de acceso a Internet. Se puede comprobar de manera online si un documento Web cumple el est\u00e1ndar definido por W3C mediante: https://validator.w3.org/ Actualmente la mayor\u00eda de navegadores aceptan p\u00e1ginas no est\u00e1ndar, pero cuanto m\u00e1s est\u00e1ndar se la aplicaci\u00f3n web desarrollada, mayor probabilidad que funcione correctamente en todos los navegadores. \u00a1\u00a1Importante!! Es una pr\u00e1ctica imprescindible el comprobar que cualquier desarrollo Web funcione correctamente en los principales navegadores.","title":"Funciones del navegador"},{"location":"Unidad_1/#5-principales-navegadores","text":"","title":"5. PRINCIPALES NAVEGADORES"},{"location":"Unidad_1/#microsoft-edge-antiguo-internet-explorer","text":"URL Oficial \u2192 https://www.microsoft.com/es-es/windows/microsoft-edge Antiguamente se llamaba Internet Explorer. Microsoft Edge est\u00e1 dise\u00f1ado para ser un navegador web ligero con un motor de renderizado de c\u00f3digo abierto construido en torno a los est\u00e1ndares web.","title":"Microsoft Edge  -  Antiguo Internet Explorer"},{"location":"Unidad_1/#mozilla-firefox","text":"URL Oficial \u2192 https://www.mozilla.org/es-ES/firefox/new/ Mozilla Firefox es un navegador web libre y de c\u00f3digo abierto desarrollado por la Corporaci\u00f3n Mozilla y la Fundaci\u00f3n Mozilla. Usa el motor Gecko para renderizar p\u00e1ginas webs, el cual implementa actuales y futuros est\u00e1ndares web. Posee una versi\u00f3n para desarrolladores: \u201cFirefox Developer Edition\u201d https://www.mozilla.org/en-US/firefox/developer/?utm_source=firebug&utm_medium=lp&utm_campaign=switch&utm_content=landingpage","title":"Mozilla Firefox"},{"location":"Unidad_1/#google-chrome","text":"URL Oficial \u2192 https://www.google.com/chrome/ Google Chrome es un navegador web desarrollado por Google y compilado con base en varios componentes e infraestructuras de desarrollo de aplicaciones (frameworks) de c\u00f3digo abierto, como el motor de renderizado Blink (bifurcaci\u00f3n o fork de WebKit). Est\u00e1 disponible gratuitamente bajo condiciones espec\u00edficas del software privativo o cerrado.","title":"Google Chrome"},{"location":"Unidad_1/#safari","text":"URL oficial \u2192 http://www.apple.com/es/safari/ Safari es un navegador web de c\u00f3digo cerrado desarrollado por Apple Inc. Est\u00e1 disponible para OS X, iOS (el sistema usado por el iPhone, el iPod touch y iPad) y Windows (sin soporte desde el 2012).","title":"Safari"},{"location":"Unidad_1/#opera","text":"URL oficial \u2192 http://www.opera.com/es Opera es un navegador web creado por la empresa noruega Opera Software. Usa el motor de renderizado Blink. Tiene versiones para escritorio, tel\u00e9fonos m\u00f3viles y tabletas.","title":"Opera"},{"location":"Unidad_1/#que-navegador-se-recomienda-para-realizar-el-curso","text":"Para realizar las actividades del m\u00f3dulo, recomiendo utilizar Mozilla Firefox (aunque es posible usar el que se desee). El motivo de usar este es la gran cantidad de herramientas para depuraci\u00f3n que posee incluso en su versi\u00f3n est\u00e1ndar. Para la mayor\u00eda de acciones con este ser\u00e1 suficiente, pero est\u00e1 disponible una versi\u00f3n que amplia las herramientas de desarrollo llamada \u201cFirefox Developer Edition\u201d.","title":"\u00bfQue navegador se recomienda para realizar el curso?"},{"location":"Unidad_1/#6-herramientas-para-el-desarrollo-consola-web","text":"Los navegadores incorporan de manera nativa herramientas para facilitar el desarrollo, entra la que destacamos la \u201cConsola Web\u201d. Asimismo, tambi\u00e9n mediante ampliaciones (extensiones, plugins, etc.) se ampl\u00edan caracter\u00edsticas para facilitar el desarrollo y la depuraci\u00f3n de c\u00f3digo. Esta consola incluye varias pesta\u00f1as : Red \u2192 Registro de Peticiones HTTP. CSS \u2192 Registra an\u00e1lisis y errores CSS. JS \u2192 Registra an\u00e1lisis y errores Javascript Seguridad \u2192 Registra advertencias o fallos de seguridad. Registro \u2192 Registra mensajes enviados al objeto \u201cwindow.console\u201d Servidor \u2192 Registrar mensajes recibidos del servidor Web. El resultado de las peticiones HTTP se muestra de color negro, CSS de color azul, JavaScript amarillo y los errores o advertencias de seguridad de color rojo, registro objeto \u201cwindow.console\u201d en gris y Servidor en verde.","title":"6. HERRAMIENTAS PARA EL DESARROLLO: CONSOLA WEB"},{"location":"Unidad_1/#7-entorno-de-desarrollo","text":"Existen diversos entornos de desarrollo, desde los m\u00e1s sencillos (Brackets, Notepad++, Sublime, Visual Studio Code, etc...) a interfaces m\u00e1s complejas (Aptana, Eclipse, etc...) En principio pod\u00e9is usar aquel que quer\u00e1is.","title":"7. ENTORNO DE DESARROLLO"},{"location":"Unidad_1/#visual-studio-code","text":"Recomendamos Visual Studio Code. Es software libre y muy potente https://code.visualstudio.com/ Aqu\u00ed algunos manuales libres de uso de Visual Studio Code en castellano: http://www.mclibre.org/consultar/informatica/lecciones/vsc-instalacion.html http://www.mclibre.org/consultar/informatica/lecciones/vsc-personalizacion.html","title":"Visual Studio Code"},{"location":"Unidad_1/#control-de-versiones-en-visual-studio-code","text":"Durante el curso, se utilizar\u00e1n repositorios Git tanto para la entrega de pr\u00e1cticas como para facilitaros el disponer de un repositorio con control de versiones. Utilizaremos una cuenta Git en Github : https://www-github.com Pod\u00e9is instalarlo en: Ubuntu: sudo apt-get update sudo apt-get install git Windows: https://git-for-windows.github.io/ Para facilitar la tarea del uso de Git es recomendable instalar alguna extensi\u00f3n o entorno que os facilite su uso. Para usar Git en Visual Studio Code https://code.visualstudio.com/docs/editor/versioncontrol http://www.mclibre.org/consultar/informatica/lecciones/vsc-git-repositorio.html Aqu\u00ed un ejemplo del uso de Git en Visual Studio Code. https://code.visualstudio.com/docs/introvideos/versioncontrol","title":"Control de versiones en Visual Studio Code"},{"location":"Unidad_1/#8-control-de-versiones-git-github","text":"Git es un software de control de versiones dise\u00f1ado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando \u00e9stas tienen un gran n\u00famero de archivos de c\u00f3digo fuente. Su prop\u00f3sito es llevar registro de los cambios en archivos de computadora y coordinar el trabajo que varias personas realizan sobre archivos compartidos Si est\u00e1s en una distribuci\u00f3n basada en Debian como Ubuntu, puedes usar apt-get: apt-get install git Para instalar git en otros sistemas operativos puedes utilizar como referencia la informaci\u00f3n de la web: https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Instalaci\u00f3n-de-Git","title":"8. CONTROL DE VERSIONES: GIT \u2013 GITHUB"},{"location":"Unidad_1/#ordenes-basicas-en-git","text":"Crear un subdirectorio nuevo llamado .git, el cual contiene todos los archivos necesarios del repositorio git init Descargar informaci\u00f3n de una determinada rama, unifica los comando fetch y merge. git pull Comienza a trackear el archivo \u201cnombre_archivo\u201d. git add <nombre_archivo> Confirma los cambios realizados. El \u201cmensaje\u201d generalmente se usa para asociar al commit una breve descripci\u00f3n de los cambios realizados. git commit -am \"<mensaje>\" Commitea los cambios desde el branch local origin al branch \u201cnombre_rama\u201d. git push origin <nombre_rama> Para consultar m\u00e1s comando, puedes visitar la web: https://git-scm.com/docs","title":"*\u00d3rdenes b\u00e1sicas en git"},{"location":"Unidad_1/#github","text":"GitHub es una forja (plataforma de desarrollo colaborativo) para alojar proyectos utilizando el sistema de control de versiones Git. Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente de programas de ordenador. El software que opera GitHub fue escrito en Ruby on Rails El 4 de junio de 2018, Microsoft compr\u00f3 GitHub por la cantidad de 7.500 millones de d\u00f3lares, este cambio de propietarios provoc\u00f3 la salida de varios proyecto desde este repositorio debido la posibilidad de acceso a c\u00f3digos fuentes por parte de una compa\u00f1\u00eda que su negocios es el software: http://www.github.com","title":"Github"},{"location":"Unidad_1/#9-integracion-de-codigo-javascript-con-html","text":"Ahora que ya conoces las herramientas que puedes utilizar para comenzar a programar en JavaScript, vamos a ver la forma de integrar el c\u00f3digo de JavaScript en tu c\u00f3digo HTML.","title":"9. INTEGRACI\u00d3N DE C\u00d3DIGO JAVASCRIPT CON HTML"},{"location":"Unidad_1/#etiqueta-script","text":"Los navegadores web te permiten varias opciones de inserci\u00f3n de c\u00f3digo de JavaScript. Podremos insertar c\u00f3digo usando las etiquetas script y empleando un atributo type indicaremos qu\u00e9 tipo de lenguaje de script estamos utilizando. <script type=\u201dtext/javascript\u201d> // El c\u00f3digo javascript vendr\u00e1 aqu\u00ed </script>","title":"Etiqueta script"},{"location":"Unidad_1/#fichero-externo","text":"Otra forma de integrar el c\u00f3digo de JavaScript es incrustar un fichero externo que contenga el c\u00f3digo de JavaScript. \u00c9sta ser\u00eda la forma m\u00e1s recomendable , ya que as\u00ed se consigue una separaci\u00f3n entre el c\u00f3digo y la estructura de la p\u00e1gina web y como ventajas adicionales podr\u00e1s compartir c\u00f3digo entre diferentes p\u00e1ginas, centralizar el c\u00f3digo para la depuraci\u00f3n de errores, tendr\u00e1s mayor claridad en tus desarrollos, m\u00e1s modularidad, seguridad del c\u00f3digo y conseguir\u00e1s que las p\u00e1ginas carguen m\u00e1s r\u00e1pido. La rapidez de carga de las p\u00e1ginas se consigue al tener el c\u00f3digo de JavaScript en un fichero independiente, ya que si m\u00e1s de una p\u00e1gina tiene que acceder a ese fichero lo coger\u00e1 autom\u00e1ticamente de la cach\u00e9 del navegador con lo que se acelerar\u00e1 la carga de la p\u00e1gina. Para ello tendremos que a\u00f1adir a la etiqueta script el atributo src , con el nombre del fichero que contiene el c\u00f3digo de JavaScript. Generalmente los ficheros que contienen texto de JavaScript tendr\u00e1n la extensi\u00f3n .js . <script type=\u201dtext/javascript\u201d src=\u201dtucodigo.js\u201d> </script>","title":"Fichero externo"},{"location":"Unidad_1/#en-codigo-html","text":"Otra alternativa consiste en incorporar javascript directamente en elementos html. Numerosos autores no recomiendan esta opci\u00f3n, con el principal motivo de que dificulta considerablemente el mantenimiento de aplicaciones. <body> <p onclick=\u201dalert(\u2018un mensaje de prueba\u2019)\u201d>P\u00e1rrafo de texto</p> <body>","title":"En c\u00f3digo html"},{"location":"Unidad_1/#etiqueta-noscript","text":"El lenguaje HTML define la etiqueta noscript para mostrar un mensaje al usuario cuando su navegador no puede ejecutar JavaScript. Esta etiqueta debe incluir en el interior el mensaje a mostrar, adem\u00e1s puede incluir cualquier elemento o etiqueta XHTML. <head> ... </head> <body> <noscript> <p> Bienvenido a Mi Sitio</p> <p> La p\u00e1gina que est\u00e1s viendo requiere para su funcionamiento el uso de JavaScript. Si lo has deshabilitado intencionadamente, por favor vuelve a activarlo </p> <noscript> <body>","title":"Etiqueta noscript"}]}